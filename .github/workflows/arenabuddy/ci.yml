name: ci

on:
  push:
    branches:
      - main
    paths:
      - arenabuddy/**
      - Cargo.toml
  pull_request:
    branches:
      - main
    paths:
      - arenabuddy/**
      - Cargo.toml


permissions:
  contents: read

jobs:
  checks:
    name: Checks
    uses: ./.github/workflows/checks.yml

  tests:
    name: Tests
    needs: [checks]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Protoc
        uses: arduino/setup-protoc@v3
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable

      - name: install system deps
        run: |
          sudo apt update
          sudo apt install libwebkit2gtk-4.1-dev \
            build-essential \
            curl \
            wget \
            file \
            libxdo-dev \
            libssl-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev

      - name: Create out directory
        shell: bash
        run: mkdir -p ./out

      - name: Run cargo tests
        working-directory: ./
        env:
          RUST_BACKTRACE: 1
          RUSTFLAGS: -Cinstrument-coverage
        run: cargo test --all

  build-bins:
    name: ${{ matrix.package }}-${{ matrix.platform }}
    needs: [checks]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        package:
          - arenabuddy_cli
        platform:
          - macos-arm64
          - macos-x64
          - windows-x64

        include:
          - platform: macos-arm64
            os: macos-14
          - platform: macos-x64
            os: macos-13
          - platform: windows-x64
            os: windows-2022

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Install Protoc
        uses: arduino/setup-protoc@v3
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable

      # - name: Install tauri cli
      #   run: |
      #     cargo install tauri-cli --version "^2.0.0" --locked
      - name: Build
        env:
          CARGO_TERM_COLOR: always
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
          RUST_BACKTRACE: 1
          RUST_LOG: "info"
          RUST_LOG_SPAN_EVENTS: full
          RUSTFLAGS: -Cinstrument-coverage
          RUSTDOCFLAGS: -Cinstrument-coverage
        run: |
          cargo build --package ${{ matrix.package }}

  build-tauri-app:
    name: app-${{ matrix.platform }}
    needs: [checks]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - macos-latest
          - macos-x64
          - windows-x64
        include:
          - platform: macos-latest
            os: macos-14
            args: "--target aarch64-apple-darwin"
          - platform: macos-x64
            os: macos-13
            args: "--target x86_64-apple-darwin"
          - platform: windows-x64
            os: windows-2022
            args: ""

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          targets: wasm32-unknown-unknown

      - uses: cargo-bins/cargo-binstall@main

      - name: Install trunk
        run: |
          cargo binstall --locked trunk

      - name: Install Protoc
        uses: arduino/setup-protoc@v3
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: build-tauri
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          args: ${{ matrix.args }}
