receivers:
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
      http:
        endpoint: 0.0.0.0:4318
        cors:
          allowed_origins:
            - "http://localhost:*"
          allowed_headers: ["*"]

processors:
  batch:
    timeout: 1s
    send_batch_size: 1024
    send_batch_max_size: 2048

  resource:
    attributes:
      - key: environment
        value: local
        action: upsert
      - key: collector.name
        value: arenabuddy-collector
        action: upsert

  memory_limiter:
    check_interval: 1s
    limit_mib: 512
    spike_limit_mib: 128

exporters:
  prometheus:
    endpoint: "0.0.0.0:8889"
    namespace: ""
    const_labels:
      environment: local
    resource_to_telemetry_conversion:
      enabled: true
    enable_open_metrics: true

  logging:
    loglevel: info
    sampling_initial: 5
    sampling_thereafter: 200

  debug:
    verbosity: normal
    sampling_initial: 2
    sampling_thereafter: 500

extensions:
  health_check:
    endpoint: 0.0.0.0:13133
    path: /health
    
  pprof:
    endpoint: 0.0.0.0:1777
    
  zpages:
    endpoint: 0.0.0.0:55679

service:
  extensions: [health_check, pprof, zpages]
  
  pipelines:
    metrics:
      receivers: [otlp]
      processors: [memory_limiter, batch, resource]
      exporters: [prometheus, logging]
    
    traces:
      receivers: [otlp]
      processors: [memory_limiter, batch, resource]
      exporters: [logging]
    
    logs:
      receivers: [otlp]
      processors: [memory_limiter, batch, resource]
      exporters: [logging]

  telemetry:
    logs:
      level: info
      encoding: console
      initial_fields:
        service: otel-collector
    metrics:
      level: normal
      address: 0.0.0.0:8888