version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: local-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: localdev
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "30432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - monitoring
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  prometheus:
    image: prom/prometheus:latest
    container_name: local-prometheus
    restart: unless-stopped
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - "30090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - monitoring
    depends_on:
      - postgres

  grafana:
    image: grafana/grafana:latest
    container_name: local-grafana
    restart: unless-stopped
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_INSTALL_PLUGINS: grafana-piechart-panel
      GF_SERVER_HTTP_PORT: 3000
    ports:
      - "30300:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    networks:
      - monitoring
    depends_on:
      - prometheus

volumes:
  postgres_data:
    driver: local
    name: local_postgres_data
  prometheus_data:
    driver: local
    name: local_prometheus_data
  grafana_data:
    driver: local
    name: local_grafana_data

networks:
  monitoring:
    driver: bridge
    name: local_monitoring_network